from confluent_kafka import Consumer, KafkaException, KafkaError

# Kafka configuration
conf = {
    'bootstrap.servers': 'localhost:9092',
    'group.id': 'temperature_consumer_group',
    'auto.offset.reset': 'earliest'
}

# Create a consumer instance
consumer = Consumer(conf)

# Subscribe to the topic
consumer.subscribe(['temperature_topic'])

# Consume and print messages in real time
try:
    while True:
        msg = consumer.poll(1.0)  # Poll for new messages (1 second timeout)
        
        if msg is None:
            continue  # No message yet
        
        if msg.error():
            if msg.error().code() == KafkaError._PARTITION_EOF:
                continue  # End of partition
            else:
                raise KafkaException(msg.error())
        
        # Print the consumed message
        print(f"Consumed message: {msg.value().decode('utf-8')}")

except KeyboardInterrupt:
    print("Consumer interrupted")
finally: